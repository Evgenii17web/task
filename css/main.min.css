@font-face{font-family:"Cambria";font-style:normal;font-weight:900;src:url(../font/Cambria-Bold.woff) format("woff"),url(../fonts/Cambria-Bold.eot) format("eot")}*{-webkit-box-sizing:border-box;box-sizing:border-box}a{text-decoration:none}body,p{margin:0}.container,.main,.welcome-flex{display:-webkit-box;display:-ms-flexbox;display:flex}.main{background:url(../img/bg.webp) no-repeat center/cover;width:100%;min-height:100vh;-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end;-webkit-box-align:stretch;-ms-flex-align:stretch;align-items:stretch}.container,.welcome-flex{-webkit-box-align:center;-ms-flex-align:center;align-items:center}.container{max-width:92.708vw;margin:0 13.021vw;width:100%;-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end}.welcome-flex{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.welcome{color:#fff;margin-bottom:3.125vw}.welcome__percent{font:10.938vw "Cambria",sans-serif}.welcome__text{font:3.542vw "Cambria",sans-serif}.bonus-code{margin-bottom:3.125vw;height:3.125vw;display:-webkit-box;display:-ms-flexbox;display:flex}.bonus-code__btn-copy,.bonus-code__code{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;height:100%;border:#464646 dashed 1px}.bonus-code__code{font:2.083vw "Arial",sans-serif;min-width:14.063vw;border-radius:2.604vw 0 0 2.604vw;border-right-style:solid;color:#f73427}.bonus-code__btn-copy{font:1.2vw "Arial",sans-serif;min-width:10.417vw;border-radius:0 2.604vw 2.604vw 0;border-left-style:solid;color:#fff;cursor:pointer;-webkit-transition:font-size 1s;-o-transition:font-size 1s;transition:font-size 1s}.bonus-code__btn-copy:active{outline:2px solid #fff;-webkit-transform:skew(-2deg) rotate(2deg);-ms-transform:skew(-2deg) rotate(2deg);transform:skew(-2deg) rotate(2deg)}.btn-play{font:900 1.042vw "Arial",sans-serif;background:#f73427;border-radius:2.604vw;color:#fff;padding:1.563vw 6.25vw;-webkit-transition:font-size .5s;-o-transition:font-size .5s;transition:font-size .5s}.btn-play:active{outline:2px solid #77c4c4;-webkit-transform:skew(-3deg) rotate(3deg);-ms-transform:skew(-3deg) rotate(3deg);transform:skew(-3deg) rotate(3deg)}.footer{position:absolute;bottom:3.125vw;left:0;padding:0 1.302vw;width:100%;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:end;-ms-flex-align:end;align-items:flex-end;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.footer__logo{width:11.146vw}.footer__terms{color:#464646;font-size:.729vw}.sparks_back,.sparks_front,.witcher{position:absolute;max-height:100vh;max-width:50vw}.witcher{z-index:100;left:7vw;bottom:0}.sparks_back,.sparks_front{z-index:50;left:15vw;bottom:10vw}.sparks_front{z-index:150}@media (max-width:1024px) and (orientation:portrait),(max-width:1023px){.witcher{display:none}.sparks_back,.sparks_front{top:0;left:0;width:100%;height:100%;max-width:100%;max-height:100%;-o-object-fit:cover;object-fit:cover;-webkit-transform:translate(0,0)!important;-ms-transform:translate(0,0)!important;transform:translate(0,0)!important}.welcome-flex{position:absolute;z-index:200}.container{-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.welcome__percent{font-size:25vmin}.welcome__text{font-size:8vmin}.bonus-code__code{min-width:30vmin;font-size:5vmin;border-radius:5vmin 0 0 5vmin}.bonus-code{height:10vmin}.bonus-code__btn-copy{font-size:3.5vmin;min-width:29vmin;border-radius:0 5vmin 5vmin 0}.btn-play{font-size:4vmin;border-radius:4vmin;padding:3vmin 10vmin}.footer__logo{width:18vmin}.footer__terms{font-size:4vmin}.footer{bottom:5vmin;padding:0 4.5vmin}.main{background-position:60% 50%}}@media (hover:hover){.btn-play:hover{font-size:1.302vw;border:#dea151 dashed 3px;max-height:90vh}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */